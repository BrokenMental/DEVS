/*
 * PanelRowState.java
 *
 * Created on June 26, 2007, 11:54 PM
 */

package genDevs.jaxb.gui;

import java.util.Enumeration;
import java.util.Hashtable;
import javax.swing.JTable;

/**
 *
 * @author  Saurabh
 */
public class PanelRowState extends javax.swing.JPanel {
    
    private String state;
    private double ta;
    
    private Hashtable<String, Double> stateAndTA = null;
     static TableModel_StateTA tableModel = null;
    
    /** Creates new form PanelRowState */
    public PanelRowState() {
        initComponents();
        stateAndTA = new Hashtable<String,Double>();
    }
    
    public Hashtable getData(){
        return stateAndTA;
    }
    
    public void resetTables(){
        tableModel  = new TableModel_StateTA();
       jtableStateTA = new JTable(tableModel);
        
        this.jScrollPane1.setViewportView(jtableStateTA);
        loadData();
        validate();
    }
    
    public void loadData(){
        stateAndTA = FrameFDDEVS.stateAndTA;
        Enumeration e = stateAndTA.keys();
        while(e.hasMoreElements()){
            String key = (String)e.nextElement();
            
            tableModel.addRow( createRowStateTA(key,(Double)stateAndTA.get(key)) );        
        int row = jtableStateTA.getRowCount() - 1;
        jtableStateTA.changeSelection(row, 0, false, false);
        
        }
        
    }
    
    public String getState(){
        state = this.jtfState.getText();
        return state;
    }
    
    public double getTimeAdvance(){
        try{
 //bpz Sept 2007
            String timeOut = jtfTimeAdvance.getText().toUpperCase();
            if (!timeOut.equals("INFINITY")&&!timeOut.equals("INF"))
              ta = Double.parseDouble(timeOut);
            else ta = Double.POSITIVE_INFINITY;
         //   ta = Double.parseDouble(this.jtfTimeAdvance.getText());
        }
        catch(Exception ex){
            System.out.println("Error in TA input value for state: "+state);
            return -1;
        }
        return ta;
    }
    
    private void resetEntries(){
        this.jtfState.setText("");
        this.jtfTimeAdvance.setText("");
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfState = new javax.swing.JTextField();
        jtfTimeAdvance = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableStateTA = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(365, 250));

        jButtonAdd.setFont(new java.awt.Font("Tahoma", 0, 10));
        jButtonAdd.setText("Add");
        jButtonAdd.setNextFocusableComponent(jtfState);
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jtableStateTA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "State", "Timeout"
            }
        ));
        jScrollPane1.setViewportView(jtableStateTA);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel1.setText("State");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel2.setText("Timeout");

        jButtonDelete.setFont(new java.awt.Font("Tahoma", 0, 10));
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfState, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jtfTimeAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jButtonAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDelete)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTimeAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
    int row = jtableStateTA.getSelectedRow();
        if(row<0) row = 0;
    Object key = jtableStateTA.getValueAt(row, 0);
    if(stateAndTA.containsKey((String)key)){
        stateAndTA.remove((String)key);
    }
        tableModel.deleteRow(jtableStateTA.getSelectedRow());
         jtableStateTA.changeSelection(row, 0, false, false);
        jtableStateTA.requestFocusInWindow();
}//GEN-LAST:event_jButtonDeleteActionPerformed

private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
    if(!stateAndTA.containsKey(getState())){
        stateAndTA.put(getState(), new Double(getTimeAdvance()));
         tableModel.addRow( createRowStateTA(getState(),new Double(getTimeAdvance())) );        
        int row = jtableStateTA.getRowCount() - 1;
        jtableStateTA.changeSelection(row, 0, false, false);
        //jtableStateTA.requestFocusInWindow();
        resetEntries();
    }
    
}//GEN-LAST:event_jButtonAddActionPerformed
 
private Object[] createRowStateTA(String key, Double value){
    Object[] newRow = {key,value};
		//int row = tableModelDeltInt.getRowCount() + 1;
		return newRow;
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtableStateTA;
    private javax.swing.JTextField jtfState;
    private javax.swing.JTextField jtfTimeAdvance;
    // End of variables declaration//GEN-END:variables
    
}
